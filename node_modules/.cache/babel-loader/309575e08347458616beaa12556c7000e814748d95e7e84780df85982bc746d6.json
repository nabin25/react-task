{"ast":null,"code":"var _jsxFileName = \"E:\\\\react-task\\\\react-app\\\\src\\\\components\\\\Todos.js\",\n  _s = $RefreshSig$();\nimport React from 'react';\nimport { useState, useEffect } from 'react';\nimport { toast } from 'react-toastify';\nimport 'react-toastify/dist/ReactToastify.css';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction Todos() {\n  _s();\n  const [todos, setTodos] = useState([]);\n  useEffect(() => {\n    const fetchData = () => {\n      fetch(\"https://jsonplaceholder.typicode.com/todos\").then(response => response.json()).then(response => {\n        const filteredTodos = response.filter(todo => todo.userId === 1);\n        setTodos(filteredTodos);\n      });\n    };\n    fetchData();\n  }, []);\n  var newTodos = [...todos];\n  const addTodo = title => {\n    try {\n      if (!title) {\n        throw \"Fields cannot be empty\";\n      }\n      const userId = 1;\n      const completed = false;\n      let todo = {\n        userId,\n        title,\n        completed\n      };\n      fetch(\"https://jsonplaceholder.typicode.com/todos\", {\n        method: \"POST\",\n        body: JSON.stringify(todo),\n        headers: {\n          \"Content-type\": \"application/json\"\n        }\n      }).then(response => response.json()).then(response => {\n        console.log(response);\n        if (todo.length !== 0) {\n          var id = todo[todo.length - 1]['id'] + 1;\n        } else {\n          id = 1;\n        }\n        const appendedResponse = {\n          ...response,\n          id: id\n        };\n        newTodos = [...todos, appendedResponse];\n        setTodos(newTodos);\n        toast.success('Todo added successfully', {\n          position: \"top-center\",\n          autoClose: 3000,\n          hideProgressBar: false,\n          closeOnClick: true,\n          pauseOnHover: true,\n          draggable: true,\n          progress: undefined,\n          theme: \"light\"\n        });\n      });\n    } catch (err) {\n      toast.error(err, {\n        position: \"top-center\",\n        autoClose: 3000,\n        hideProgressBar: false,\n        closeOnClick: true,\n        pauseOnHover: true,\n        draggable: true,\n        progress: undefined,\n        theme: \"light\"\n      });\n    }\n  };\n  const deleteTodo = async index => {\n    try {\n      const response = await fetch(`https://jsonplaceholder.typicode.com/todos/${index}`, {\n        method: \"DELETE\"\n      });\n      console.log(response);\n      let idx = newTodos.findIndex(todo => todo.id === index);\n      newPosts.splice(idx, 1);\n      setPosts(newPosts);\n      toast.success('Post deleted successfully', {\n        position: \"top-center\",\n        autoClose: 3000,\n        hideProgressBar: false,\n        closeOnClick: true,\n        pauseOnHover: true,\n        draggable: true,\n        progress: undefined,\n        theme: \"light\"\n      });\n    } catch (err) {\n      toast.error(err.message, {\n        position: \"top-center\",\n        autoClose: 3000,\n        hideProgressBar: false,\n        closeOnClick: true,\n        pauseOnHover: true,\n        draggable: true,\n        progress: undefined,\n        theme: \"light\"\n      });\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: \"Todos\"\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 111,\n    columnNumber: 5\n  }, this);\n}\n_s(Todos, \"4w2FR3x+JAhc2MKl4V8naiLXs70=\");\n_c = Todos;\nexport default Todos;\nvar _c;\n$RefreshReg$(_c, \"Todos\");","map":{"version":3,"names":["React","useState","useEffect","toast","jsxDEV","_jsxDEV","Todos","_s","todos","setTodos","fetchData","fetch","then","response","json","filteredTodos","filter","todo","userId","newTodos","addTodo","title","completed","method","body","JSON","stringify","headers","console","log","length","id","appendedResponse","success","position","autoClose","hideProgressBar","closeOnClick","pauseOnHover","draggable","progress","undefined","theme","err","error","deleteTodo","index","idx","findIndex","newPosts","splice","setPosts","message","children","fileName","_jsxFileName","lineNumber","columnNumber","_c","$RefreshReg$"],"sources":["E:/react-task/react-app/src/components/Todos.js"],"sourcesContent":["import React from 'react'\r\nimport { useState, useEffect } from 'react';\r\nimport { toast } from 'react-toastify'\r\nimport 'react-toastify/dist/ReactToastify.css';\r\n\r\nfunction Todos() {\r\n    const [todos, setTodos] = useState([]);\r\n    useEffect(() => {\r\n        const fetchData = () => {\r\n          fetch(\"https://jsonplaceholder.typicode.com/todos\")\r\n          .then(response => response.json())\r\n          .then((response) => {\r\n            const filteredTodos = response.filter((todo) => todo.userId === 1)\r\n            setTodos(filteredTodos)\r\n          })\r\n        }\r\n        fetchData();\r\n      }, []);\r\n      var newTodos = [...todos]\r\n\r\n      const addTodo = (title) => {\r\n       try{\r\n        if(!title){\r\n            throw(\"Fields cannot be empty\");\r\n          }\r\n        const userId=1;\r\n        const completed=false;\r\n        let todo = {\r\n          userId,\r\n          title,\r\n          completed\r\n        }\r\n        fetch(\"https://jsonplaceholder.typicode.com/todos\",{\r\n          method:\"POST\",\r\n          body: JSON.stringify(todo),\r\n          headers: {\r\n            \"Content-type\": \"application/json\"\r\n          }\r\n        })\r\n        .then(response => response.json())\r\n        .then((response) => {\r\n          console.log(response)\r\n          if (todo.length!==0){\r\n            var id = todo[todo.length-1]['id']+1;\r\n          }\r\n          else{\r\n            id = 1;\r\n          }\r\n          const appendedResponse = {...response, id:id}\r\n          newTodos = [...todos, appendedResponse]\r\n          setTodos(newTodos)\r\n          toast.success('Todo added successfully', {\r\n            position: \"top-center\",\r\n            autoClose: 3000,\r\n            hideProgressBar: false,\r\n            closeOnClick: true,\r\n            pauseOnHover: true,\r\n            draggable: true,\r\n            progress: undefined,\r\n            theme: \"light\",\r\n            });\r\n        })\r\n      } catch(err){\r\n        toast.error(err, {\r\n            position: \"top-center\",\r\n            autoClose: 3000,\r\n            hideProgressBar: false,\r\n            closeOnClick: true,\r\n            pauseOnHover: true,\r\n            draggable: true,\r\n            progress: undefined,\r\n            theme: \"light\",\r\n            });\r\n      }\r\n    } \r\n\r\n    const deleteTodo = async index => {\r\n        try {\r\n          const response = await fetch(`https://jsonplaceholder.typicode.com/todos/${index}`,{\r\n            method:\"DELETE\"\r\n          });\r\n          console.log(response)\r\n          let idx = newTodos.findIndex(todo=>todo.id===index);\r\n          newPosts.splice(idx,1);\r\n          setPosts(newPosts)\r\n          toast.success('Post deleted successfully', {\r\n            position: \"top-center\",\r\n            autoClose: 3000,\r\n            hideProgressBar: false,\r\n            closeOnClick: true,\r\n            pauseOnHover: true,\r\n            draggable: true,\r\n            progress: undefined,\r\n            theme: \"light\",\r\n            });\r\n        } catch(err){\r\n          toast.error(err.message, {\r\n            position: \"top-center\",\r\n            autoClose: 3000,\r\n            hideProgressBar: false,\r\n            closeOnClick: true,\r\n            pauseOnHover: true,\r\n            draggable: true,\r\n            progress: undefined,\r\n            theme: \"light\",\r\n            });\r\n        }\r\n      }\r\n\r\n  return (\r\n    <div>Todos</div>\r\n  )\r\n}\r\n\r\nexport default Todos"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}