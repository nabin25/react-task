{"ast":null,"code":"var _jsxFileName = \"E:\\\\react-task\\\\react-app\\\\src\\\\components\\\\Posts.js\",\n  _s = $RefreshSig$();\nimport React, { useEffect, useState } from 'react';\nimport PostForm from './PostForm';\nimport PostList from './PostList';\nimport { toast, ToastContainer } from 'react-toastify';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction Posts() {\n  _s();\n  const [posts, setPosts] = useState([]);\n  toast('ðŸ¦„ Wow so easy!', {\n    position: \"top-center\",\n    autoClose: 5000,\n    hideProgressBar: false,\n    closeOnClick: true,\n    pauseOnHover: true,\n    draggable: true,\n    progress: undefined,\n    theme: \"light\"\n  });\n  useEffect(() => {\n    const fetchData = () => {\n      fetch(\"https://jsonplaceholder.typicode.com/posts\").then(response => response.json()).then(response => {\n        const filteredPosts = response.filter(post => post.userId === 1);\n        setPosts(filteredPosts);\n      });\n    };\n    fetchData();\n  }, []);\n  var newPosts = [...posts];\n  const addPost = (title, body) => {\n    const userId = 1;\n    let post = {\n      userId,\n      title,\n      body\n    };\n    fetch(\"https://jsonplaceholder.typicode.com/posts\", {\n      method: \"POST\",\n      body: JSON.stringify(post),\n      headers: {\n        \"Content-type\": \"application/json\"\n      }\n    }).then(response => response.json()).then(response => {\n      console.log(response);\n      const appendedResponse = {\n        ...response,\n        id: posts[posts.length - 1]['id'] + 1\n      };\n      newPosts = [...posts, appendedResponse];\n      setPosts(newPosts);\n      console.log(posts);\n    });\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(ToastContainer, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 57,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(PostList, {\n      posts: posts\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 58,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(PostForm, {\n      addPost: addPost\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 59,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 56,\n    columnNumber: 5\n  }, this);\n}\n_s(Posts, \"bG8V4duoIfO0BEPgauWMVT5Qvyw=\");\n_c = Posts;\nexport default Posts;\nvar _c;\n$RefreshReg$(_c, \"Posts\");","map":{"version":3,"names":["React","useEffect","useState","PostForm","PostList","toast","ToastContainer","jsxDEV","_jsxDEV","Posts","_s","posts","setPosts","position","autoClose","hideProgressBar","closeOnClick","pauseOnHover","draggable","progress","undefined","theme","fetchData","fetch","then","response","json","filteredPosts","filter","post","userId","newPosts","addPost","title","body","method","JSON","stringify","headers","console","log","appendedResponse","id","length","children","fileName","_jsxFileName","lineNumber","columnNumber","_c","$RefreshReg$"],"sources":["E:/react-task/react-app/src/components/Posts.js"],"sourcesContent":["import React, { useEffect, useState } from 'react';\r\nimport PostForm from './PostForm';\r\nimport PostList from './PostList';\r\nimport { toast, ToastContainer } from 'react-toastify'\r\n\r\nfunction Posts() {\r\n  const [posts, setPosts] = useState([]);\r\n  toast('ðŸ¦„ Wow so easy!', {\r\n    position: \"top-center\",\r\n    autoClose: 5000,\r\n    hideProgressBar: false,\r\n    closeOnClick: true,\r\n    pauseOnHover: true,\r\n    draggable: true,\r\n    progress: undefined,\r\n    theme: \"light\",\r\n    });\r\n  useEffect(() => {\r\n    const fetchData = () => {\r\n      fetch(\"https://jsonplaceholder.typicode.com/posts\")\r\n      .then(response => response.json())\r\n      .then((response) => {\r\n        const filteredPosts = response.filter((post) => post.userId === 1)\r\n        setPosts(filteredPosts)\r\n      })\r\n    }\r\n    fetchData();\r\n  }, []);\r\n  var newPosts = [...posts]\r\n\r\n  const addPost = (title, body) => {\r\n    const userId=1;\r\n    let post = {\r\n      userId,\r\n      title,\r\n      body,\r\n    }\r\n    fetch(\"https://jsonplaceholder.typicode.com/posts\",{\r\n      method:\"POST\",\r\n      body: JSON.stringify(post),\r\n      headers: {\r\n        \"Content-type\": \"application/json\"\r\n      }\r\n    })\r\n    .then(response => response.json())\r\n    .then((response) => {\r\n      console.log(response)\r\n      const appendedResponse = {...response, id:posts[posts.length-1]['id']+1}\r\n      newPosts = [...posts, appendedResponse]\r\n      setPosts(newPosts)\r\n      console.log(posts)\r\n    })\r\n  }\r\n\r\n  return (\r\n    <div>\r\n      <ToastContainer/>\r\n      <PostList posts={posts} />\r\n      <PostForm addPost={addPost}/>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default Posts;\r\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}