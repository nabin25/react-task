{"ast":null,"code":"var _jsxFileName = \"E:\\\\react-task\\\\react-app\\\\src\\\\components\\\\PostList.js\",\n  _s = $RefreshSig$();\nimport React, { useState } from 'react';\nimport Post from './Post';\nimport './PostList.css'; // Import the CSS file for styles\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction PostList({\n  posts,\n  deletePost,\n  editPost\n}) {\n  _s();\n  const [currentPage, setCurrentPage] = useState(1);\n  const postsPerPage = 5;\n\n  // Calculate the index range for the current page\n  const indexOfLastPost = currentPage * postsPerPage;\n  const indexOfFirstPost = indexOfLastPost - postsPerPage;\n  const currentPosts = posts.slice(indexOfFirstPost, indexOfLastPost);\n\n  // Calculate the total number of pages\n  const totalPages = Math.ceil(posts.length / postsPerPage);\n\n  // Handle pagination button click\n  const handlePageChange = newPage => {\n    setCurrentPage(newPage);\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"post-list\",\n    children: [currentPosts.map(post => /*#__PURE__*/_jsxDEV(Post, {\n      post: post,\n      deletePost: deletePost,\n      editPost: editPost\n    }, post.id, false, {\n      fileName: _jsxFileName,\n      lineNumber: 25,\n      columnNumber: 9\n    }, this)), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"pagination\",\n      children: Array.from({\n        length: totalPages\n      }).map((_, index) => /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: () => handlePageChange(index + 1),\n        className: currentPage === index + 1 ? 'active' : '',\n        children: index + 1\n      }, index + 1, false, {\n        fileName: _jsxFileName,\n        lineNumber: 36,\n        columnNumber: 11\n      }, this))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 34,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 23,\n    columnNumber: 5\n  }, this);\n}\n_s(PostList, \"6xAUoJ2motYJ38x4zeUWisA+X/4=\");\n_c = PostList;\nexport default PostList;\nvar _c;\n$RefreshReg$(_c, \"PostList\");","map":{"version":3,"names":["React","useState","Post","jsxDEV","_jsxDEV","PostList","posts","deletePost","editPost","_s","currentPage","setCurrentPage","postsPerPage","indexOfLastPost","indexOfFirstPost","currentPosts","slice","totalPages","Math","ceil","length","handlePageChange","newPage","className","children","map","post","id","fileName","_jsxFileName","lineNumber","columnNumber","Array","from","_","index","onClick","_c","$RefreshReg$"],"sources":["E:/react-task/react-app/src/components/PostList.js"],"sourcesContent":["import React, { useState } from 'react';\r\nimport Post from './Post';\r\nimport './PostList.css'; // Import the CSS file for styles\r\n\r\nfunction PostList({ posts, deletePost, editPost }) {\r\n  const [currentPage, setCurrentPage] = useState(1);\r\n  const postsPerPage = 5;\r\n\r\n  // Calculate the index range for the current page\r\n  const indexOfLastPost = currentPage * postsPerPage;\r\n  const indexOfFirstPost = indexOfLastPost - postsPerPage;\r\n  const currentPosts = posts.slice(indexOfFirstPost, indexOfLastPost);\r\n\r\n  // Calculate the total number of pages\r\n  const totalPages = Math.ceil(posts.length / postsPerPage);\r\n\r\n  // Handle pagination button click\r\n  const handlePageChange = (newPage) => {\r\n    setCurrentPage(newPage);\r\n  };\r\n\r\n  return (\r\n    <div className=\"post-list\">\r\n      {currentPosts.map((post) => (\r\n        <Post\r\n          key={post.id}\r\n          post={post}\r\n          deletePost={deletePost}\r\n          editPost={editPost}\r\n        />\r\n      ))}\r\n\r\n      {/* Pagination Controls */}\r\n      <div className=\"pagination\">\r\n        {Array.from({ length: totalPages }).map((_, index) => (\r\n          <button\r\n            key={index + 1}\r\n            onClick={() => handlePageChange(index + 1)}\r\n            className={currentPage === index + 1 ? 'active' : ''}\r\n          >\r\n            {index + 1}\r\n          </button>\r\n        ))}\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default PostList;\r\n"],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,QAAQ,QAAQ,OAAO;AACvC,OAAOC,IAAI,MAAM,QAAQ;AACzB,OAAO,gBAAgB,CAAC,CAAC;AAAA,SAAAC,MAAA,IAAAC,OAAA;AAEzB,SAASC,QAAQA,CAAC;EAAEC,KAAK;EAAEC,UAAU;EAAEC;AAAS,CAAC,EAAE;EAAAC,EAAA;EACjD,MAAM,CAACC,WAAW,EAAEC,cAAc,CAAC,GAAGV,QAAQ,CAAC,CAAC,CAAC;EACjD,MAAMW,YAAY,GAAG,CAAC;;EAEtB;EACA,MAAMC,eAAe,GAAGH,WAAW,GAAGE,YAAY;EAClD,MAAME,gBAAgB,GAAGD,eAAe,GAAGD,YAAY;EACvD,MAAMG,YAAY,GAAGT,KAAK,CAACU,KAAK,CAACF,gBAAgB,EAAED,eAAe,CAAC;;EAEnE;EACA,MAAMI,UAAU,GAAGC,IAAI,CAACC,IAAI,CAACb,KAAK,CAACc,MAAM,GAAGR,YAAY,CAAC;;EAEzD;EACA,MAAMS,gBAAgB,GAAIC,OAAO,IAAK;IACpCX,cAAc,CAACW,OAAO,CAAC;EACzB,CAAC;EAED,oBACElB,OAAA;IAAKmB,SAAS,EAAC,WAAW;IAAAC,QAAA,GACvBT,YAAY,CAACU,GAAG,CAAEC,IAAI,iBACrBtB,OAAA,CAACF,IAAI;MAEHwB,IAAI,EAAEA,IAAK;MACXnB,UAAU,EAAEA,UAAW;MACvBC,QAAQ,EAAEA;IAAS,GAHdkB,IAAI,CAACC,EAAE;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAIb,CACF,CAAC,eAGF3B,OAAA;MAAKmB,SAAS,EAAC,YAAY;MAAAC,QAAA,EACxBQ,KAAK,CAACC,IAAI,CAAC;QAAEb,MAAM,EAAEH;MAAW,CAAC,CAAC,CAACQ,GAAG,CAAC,CAACS,CAAC,EAAEC,KAAK,kBAC/C/B,OAAA;QAEEgC,OAAO,EAAEA,CAAA,KAAMf,gBAAgB,CAACc,KAAK,GAAG,CAAC,CAAE;QAC3CZ,SAAS,EAAEb,WAAW,KAAKyB,KAAK,GAAG,CAAC,GAAG,QAAQ,GAAG,EAAG;QAAAX,QAAA,EAEpDW,KAAK,GAAG;MAAC,GAJLA,KAAK,GAAG,CAAC;QAAAP,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAKR,CACT;IAAC;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACC,CAAC;EAAA;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACH,CAAC;AAEV;AAACtB,EAAA,CA1CQJ,QAAQ;AAAAgC,EAAA,GAARhC,QAAQ;AA4CjB,eAAeA,QAAQ;AAAC,IAAAgC,EAAA;AAAAC,YAAA,CAAAD,EAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}