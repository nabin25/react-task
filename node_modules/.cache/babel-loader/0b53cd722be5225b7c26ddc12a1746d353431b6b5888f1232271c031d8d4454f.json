{"ast":null,"code":"var _jsxFileName = \"E:\\\\react-task\\\\react-app\\\\src\\\\components\\\\PostList.js\",\n  _s = $RefreshSig$();\nimport React, { useState } from 'react';\nimport Post from './Post';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction PostList({\n  posts,\n  deletePost,\n  editPost\n}) {\n  _s();\n  const [currentPage, setCurrentPage] = useState(1);\n  const [searchTerm, setSearchTerm] = useState('');\n  const [openCommentPostId, setOpenCommentPostId] = useState(null);\n  const postsPerPage = 5;\n  const indexOfLastPost = currentPage * postsPerPage;\n  const indexOfFirstPost = indexOfLastPost - postsPerPage;\n  const filteredPosts = posts.filter(post => post.title.toLowerCase().includes(searchTerm.toLowerCase()));\n  const currentPosts = filteredPosts.slice(indexOfFirstPost, indexOfLastPost);\n  const totalPages = Math.ceil(filteredPosts.length / postsPerPage);\n  const handlePageChange = newPage => {\n    setCurrentPage(newPage);\n  };\n\n  // Handle search input change\n  const handleSearchChange = e => {\n    setSearchTerm(e.target.value);\n    setCurrentPage(1); // Reset to the first page when searching\n    setOpenCommentPostId(null); // Close open comments when searching\n  };\n\n  // Handle comment toggle\n  const handleCommentToggle = postId => {\n    setOpenCommentPostId(openCommentPostId === postId ? null : postId);\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"post-list\",\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"search-container\",\n      children: /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"text\",\n        placeholder: \"Search by title...\",\n        value: searchTerm,\n        onChange: handleSearchChange\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 41,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 40,\n      columnNumber: 7\n    }, this), currentPosts.map(post => /*#__PURE__*/_jsxDEV(Post, {\n      post: post,\n      deletePost: deletePost,\n      editPost: editPost,\n      toggleComments: () => handleCommentToggle(post.id),\n      isCommentsOpen: openCommentPostId === post.id\n    }, post.id, false, {\n      fileName: _jsxFileName,\n      lineNumber: 50,\n      columnNumber: 9\n    }, this)), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"pagination\",\n      children: Array.from({\n        length: totalPages\n      }).map((_, index) => /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: () => handlePageChange(index + 1),\n        className: currentPage === index + 1 ? 'active' : '',\n        children: index + 1\n      }, index + 1, false, {\n        fileName: _jsxFileName,\n        lineNumber: 63,\n        columnNumber: 11\n      }, this))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 61,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 38,\n    columnNumber: 5\n  }, this);\n}\n_s(PostList, \"9qi0ZFp295zp/57TkZnez9dtY0k=\");\n_c = PostList;\nexport default PostList;\nvar _c;\n$RefreshReg$(_c, \"PostList\");","map":{"version":3,"names":["React","useState","Post","jsxDEV","_jsxDEV","PostList","posts","deletePost","editPost","_s","currentPage","setCurrentPage","searchTerm","setSearchTerm","openCommentPostId","setOpenCommentPostId","postsPerPage","indexOfLastPost","indexOfFirstPost","filteredPosts","filter","post","title","toLowerCase","includes","currentPosts","slice","totalPages","Math","ceil","length","handlePageChange","newPage","handleSearchChange","e","target","value","handleCommentToggle","postId","className","children","type","placeholder","onChange","fileName","_jsxFileName","lineNumber","columnNumber","map","toggleComments","id","isCommentsOpen","Array","from","_","index","onClick","_c","$RefreshReg$"],"sources":["E:/react-task/react-app/src/components/PostList.js"],"sourcesContent":["import React, { useState } from 'react';\r\nimport Post from './Post';\r\n\r\nfunction PostList({ posts, deletePost, editPost }) {\r\n  const [currentPage, setCurrentPage] = useState(1);\r\n  const [searchTerm, setSearchTerm] = useState('');\r\n  const [openCommentPostId, setOpenCommentPostId] = useState(null); \r\n  const postsPerPage = 5;\r\n\r\n  const indexOfLastPost = currentPage * postsPerPage;\r\n  const indexOfFirstPost = indexOfLastPost - postsPerPage;\r\n\r\n  const filteredPosts = posts.filter((post) =>\r\n    post.title.toLowerCase().includes(searchTerm.toLowerCase())\r\n  );\r\n\r\n  const currentPosts = filteredPosts.slice(indexOfFirstPost, indexOfLastPost);\r\n\r\n  const totalPages = Math.ceil(filteredPosts.length / postsPerPage);\r\n\r\n  const handlePageChange = (newPage) => {\r\n    setCurrentPage(newPage);\r\n  };\r\n\r\n  // Handle search input change\r\n  const handleSearchChange = (e) => {\r\n    setSearchTerm(e.target.value);\r\n    setCurrentPage(1); // Reset to the first page when searching\r\n    setOpenCommentPostId(null); // Close open comments when searching\r\n  };\r\n\r\n  // Handle comment toggle\r\n  const handleCommentToggle = (postId) => {\r\n    setOpenCommentPostId(openCommentPostId === postId ? null : postId);\r\n  };\r\n\r\n  return (\r\n    <div className=\"post-list\">\r\n      {/* Search Input */}\r\n      <div className=\"search-container\">\r\n        <input\r\n          type=\"text\"\r\n          placeholder=\"Search by title...\"\r\n          value={searchTerm}\r\n          onChange={handleSearchChange}\r\n        />\r\n      </div>\r\n\r\n      {currentPosts.map((post) => (\r\n        <Post\r\n          key={post.id}\r\n          post={post}\r\n          deletePost={deletePost}\r\n          editPost={editPost}\r\n          toggleComments={() => handleCommentToggle(post.id)}\r\n          isCommentsOpen={openCommentPostId === post.id}\r\n        />\r\n      ))}\r\n\r\n      {/* Pagination Controls */}\r\n      <div className=\"pagination\">\r\n        {Array.from({ length: totalPages }).map((_, index) => (\r\n          <button\r\n            key={index + 1}\r\n            onClick={() => handlePageChange(index + 1)}\r\n            className={currentPage === index + 1 ? 'active' : ''}\r\n          >\r\n            {index + 1}\r\n          </button>\r\n        ))}\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default PostList;\r\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}