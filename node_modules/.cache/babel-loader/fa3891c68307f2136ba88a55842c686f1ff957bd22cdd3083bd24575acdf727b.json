{"ast":null,"code":"var _jsxFileName = \"E:\\\\react-task\\\\react-app\\\\src\\\\components\\\\PostList.js\",\n  _s = $RefreshSig$();\nimport React, { useState } from 'react';\nimport Post from './Post';\nimport './PostList.css'; // Import the CSS file for styles\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction PostList({\n  posts,\n  deletePost,\n  editPost\n}) {\n  _s();\n  const [currentPage, setCurrentPage] = useState(1);\n  const [searchTerm, setSearchTerm] = useState('');\n  const postsPerPage = 5;\n\n  // Calculate the index range for the current page\n  const indexOfLastPost = currentPage * postsPerPage;\n  const indexOfFirstPost = indexOfLastPost - postsPerPage;\n  const filteredPosts = posts.filter(post => post.title.toLowerCase().includes(searchTerm.toLowerCase()));\n  const currentPosts = filteredPosts.slice(indexOfFirstPost, indexOfLastPost);\n\n  // Calculate the total number of pages\n  const totalPages = Math.ceil(filteredPosts.length / postsPerPage);\n\n  // Handle pagination button click\n  const handlePageChange = newPage => {\n    setCurrentPage(newPage);\n  };\n\n  // Handle search input change\n  const handleSearchChange = e => {\n    setSearchTerm(e.target.value);\n    setCurrentPage(1); // Reset to the first page when searching\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"post-list\",\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"search-container\",\n      children: [/*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"text\",\n        placeholder: \"Search by title...\",\n        value: searchTerm,\n        onChange: handleSearchChange\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 36,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: () => setCurrentPage(1),\n        children: \"Search\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 42,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 35,\n      columnNumber: 7\n    }, this), currentPosts.map(post => /*#__PURE__*/_jsxDEV(Post, {\n      post: post,\n      deletePost: deletePost,\n      editPost: editPost\n    }, post.id, false, {\n      fileName: _jsxFileName,\n      lineNumber: 46,\n      columnNumber: 9\n    }, this)), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"pagination\",\n      children: Array.from({\n        length: totalPages\n      }).map((_, index) => /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: () => handlePageChange(index + 1),\n        className: currentPage === index + 1 ? 'active' : '',\n        children: index + 1\n      }, index + 1, false, {\n        fileName: _jsxFileName,\n        lineNumber: 57,\n        columnNumber: 11\n      }, this))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 55,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 33,\n    columnNumber: 5\n  }, this);\n}\n_s(PostList, \"cgrf/ApjzshVnXbp4yFZmWwKmYA=\");\n_c = PostList;\nexport default PostList;\nvar _c;\n$RefreshReg$(_c, \"PostList\");","map":{"version":3,"names":["React","useState","Post","jsxDEV","_jsxDEV","PostList","posts","deletePost","editPost","_s","currentPage","setCurrentPage","searchTerm","setSearchTerm","postsPerPage","indexOfLastPost","indexOfFirstPost","filteredPosts","filter","post","title","toLowerCase","includes","currentPosts","slice","totalPages","Math","ceil","length","handlePageChange","newPage","handleSearchChange","e","target","value","className","children","type","placeholder","onChange","fileName","_jsxFileName","lineNumber","columnNumber","onClick","map","id","Array","from","_","index","_c","$RefreshReg$"],"sources":["E:/react-task/react-app/src/components/PostList.js"],"sourcesContent":["import React, { useState } from 'react';\r\nimport Post from './Post';\r\nimport './PostList.css'; // Import the CSS file for styles\r\n\r\nfunction PostList({ posts, deletePost, editPost }) {\r\n  const [currentPage, setCurrentPage] = useState(1);\r\n  const [searchTerm, setSearchTerm] = useState('');\r\n  const postsPerPage = 5;\r\n\r\n  // Calculate the index range for the current page\r\n  const indexOfLastPost = currentPage * postsPerPage;\r\n  const indexOfFirstPost = indexOfLastPost - postsPerPage;\r\n  const filteredPosts = posts.filter((post) =>\r\n    post.title.toLowerCase().includes(searchTerm.toLowerCase())\r\n  );\r\n  const currentPosts = filteredPosts.slice(indexOfFirstPost, indexOfLastPost);\r\n\r\n  // Calculate the total number of pages\r\n  const totalPages = Math.ceil(filteredPosts.length / postsPerPage);\r\n\r\n  // Handle pagination button click\r\n  const handlePageChange = (newPage) => {\r\n    setCurrentPage(newPage);\r\n  };\r\n\r\n  // Handle search input change\r\n  const handleSearchChange = (e) => {\r\n    setSearchTerm(e.target.value);\r\n    setCurrentPage(1); // Reset to the first page when searching\r\n  };\r\n\r\n  return (\r\n    <div className=\"post-list\">\r\n      {/* Search Input and Button */}\r\n      <div className=\"search-container\">\r\n        <input\r\n          type=\"text\"\r\n          placeholder=\"Search by title...\"\r\n          value={searchTerm}\r\n          onChange={handleSearchChange}\r\n        />\r\n        <button onClick={() => setCurrentPage(1)}>Search</button>\r\n      </div>\r\n\r\n      {currentPosts.map((post) => (\r\n        <Post\r\n          key={post.id}\r\n          post={post}\r\n          deletePost={deletePost}\r\n          editPost={editPost}\r\n        />\r\n      ))}\r\n\r\n      {/* Pagination Controls */}\r\n      <div className=\"pagination\">\r\n        {Array.from({ length: totalPages }).map((_, index) => (\r\n          <button\r\n            key={index + 1}\r\n            onClick={() => handlePageChange(index + 1)}\r\n            className={currentPage === index + 1 ? 'active' : ''}\r\n          >\r\n            {index + 1}\r\n          </button>\r\n        ))}\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default PostList;\r\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}