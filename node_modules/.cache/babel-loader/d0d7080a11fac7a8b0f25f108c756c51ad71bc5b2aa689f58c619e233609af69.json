{"ast":null,"code":"var _jsxFileName = \"E:\\\\react-task\\\\react-app\\\\src\\\\components\\\\Posts.js\",\n  _s = $RefreshSig$();\nimport React, { useEffect, useState } from 'react';\nimport PostForm from './PostForm';\nimport PostList from './PostList';\nimport { toast } from 'react-toastify';\nimport 'react-toastify/dist/ReactToastify.css';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction Posts() {\n  _s();\n  const [posts, setPosts] = useState([]);\n  useEffect(() => {\n    const fetchData = () => {\n      fetch(\"https://jsonplaceholder.typicode.com/posts\").then(response => response.json()).then(response => {\n        const filteredPosts = response.filter(post => post.userId === 1);\n        setPosts(filteredPosts);\n      });\n    };\n    fetchData();\n  }, []);\n  var newPosts = [...posts];\n  const addPost = (title, body) => {\n    const userId = 1;\n    let post = {\n      userId,\n      title,\n      body\n    };\n    fetch(\"https://jsonplaceholder.typicode.com/posts\", {\n      method: \"POST\",\n      body: JSON.stringify(post),\n      headers: {\n        \"Content-type\": \"application/json\"\n      }\n    }).then(response => response.json()).then(response => {\n      console.log(response);\n      if (posts.length !== 0) {\n        var id = posts[posts.length - 1]['id'] + 1;\n      } else {\n        id = 1;\n      }\n      const appendedResponse = {\n        ...response,\n        id: id\n      };\n      newPosts = [...posts, appendedResponse];\n      setPosts(newPosts);\n      toast.success('Post added successfully', {\n        position: \"top-center\",\n        autoClose: 3000,\n        hideProgressBar: false,\n        closeOnClick: true,\n        pauseOnHover: true,\n        draggable: true,\n        progress: undefined,\n        theme: \"light\"\n      });\n      console.log(posts);\n    });\n  };\n  const deletePost = async index => {\n    try {\n      const response = await fetch(`https://jsonplaceholder.typicode.com/posts/${index}`, {\n        method: \"DELETE\"\n      });\n      console.log(response);\n      let idx = newPosts.findIndex(todo => todo.id === index);\n      newPosts.splice(idx, 1);\n      setPosts(newPosts);\n      toast.success('Post deleted successfully', {\n        position: \"top-center\",\n        autoClose: 3000,\n        hideProgressBar: false,\n        closeOnClick: true,\n        pauseOnHover: true,\n        draggable: true,\n        progress: undefined,\n        theme: \"light\"\n      });\n    } catch (err) {\n      toast.error(err.message, {\n        position: \"top-center\",\n        autoClose: 3000,\n        hideProgressBar: false,\n        closeOnClick: true,\n        pauseOnHover: true,\n        draggable: true,\n        progress: undefined,\n        theme: \"light\"\n      });\n    }\n  };\n  const editPost = async (index, title, body) => {\n    try {\n      let idx = newPosts.findIndex(post => post.id === index);\n      const response = await fetch(\"https://jsonplaceholder.com/posts/\" + index);\n    } catch {}\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(PostList, {\n      posts: posts,\n      deletePost: deletePost\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 109,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(PostForm, {\n      addPost: addPost\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 110,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 108,\n    columnNumber: 5\n  }, this);\n}\n_s(Posts, \"bG8V4duoIfO0BEPgauWMVT5Qvyw=\");\n_c = Posts;\nexport default Posts;\nvar _c;\n$RefreshReg$(_c, \"Posts\");","map":{"version":3,"names":["React","useEffect","useState","PostForm","PostList","toast","jsxDEV","_jsxDEV","Posts","_s","posts","setPosts","fetchData","fetch","then","response","json","filteredPosts","filter","post","userId","newPosts","addPost","title","body","method","JSON","stringify","headers","console","log","length","id","appendedResponse","success","position","autoClose","hideProgressBar","closeOnClick","pauseOnHover","draggable","progress","undefined","theme","deletePost","index","idx","findIndex","todo","splice","err","error","message","editPost","children","fileName","_jsxFileName","lineNumber","columnNumber","_c","$RefreshReg$"],"sources":["E:/react-task/react-app/src/components/Posts.js"],"sourcesContent":["import React, { useEffect, useState } from 'react';\r\nimport PostForm from './PostForm';\r\nimport PostList from './PostList';\r\nimport { toast } from 'react-toastify'\r\nimport 'react-toastify/dist/ReactToastify.css';\r\n\r\nfunction Posts() {\r\n  const [posts, setPosts] = useState([]);\r\n\r\n  useEffect(() => {\r\n    const fetchData = () => {\r\n      fetch(\"https://jsonplaceholder.typicode.com/posts\")\r\n      .then(response => response.json())\r\n      .then((response) => {\r\n        const filteredPosts = response.filter((post) => post.userId === 1)\r\n        setPosts(filteredPosts)\r\n      })\r\n    }\r\n    fetchData();\r\n  }, []);\r\n  var newPosts = [...posts]\r\n\r\n  const addPost = (title, body) => {\r\n    const userId=1;\r\n    let post = {\r\n      userId,\r\n      title,\r\n      body,\r\n    }\r\n    fetch(\"https://jsonplaceholder.typicode.com/posts\",{\r\n      method:\"POST\",\r\n      body: JSON.stringify(post),\r\n      headers: {\r\n        \"Content-type\": \"application/json\"\r\n      }\r\n    })\r\n    .then(response => response.json())\r\n    .then((response) => {\r\n      console.log(response)\r\n      if (posts.length!==0){\r\n        var id = posts[posts.length-1]['id']+1;\r\n      }\r\n      else{\r\n        id = 1;\r\n      }\r\n      const appendedResponse = {...response, id:id}\r\n      newPosts = [...posts, appendedResponse]\r\n      setPosts(newPosts)\r\n      toast.success('Post added successfully', {\r\n        position: \"top-center\",\r\n        autoClose: 3000,\r\n        hideProgressBar: false,\r\n        closeOnClick: true,\r\n        pauseOnHover: true,\r\n        draggable: true,\r\n        progress: undefined,\r\n        theme: \"light\",\r\n        });\r\n      console.log(posts)\r\n    })\r\n  }\r\n\r\n  const deletePost = async index => {\r\n    try {\r\n      const response = await fetch(`https://jsonplaceholder.typicode.com/posts/${index}`,{\r\n        method:\"DELETE\"\r\n      });\r\n      console.log(response)\r\n      let idx = newPosts.findIndex(todo=>todo.id===index);\r\n      newPosts.splice(idx,1);\r\n      setPosts(newPosts)\r\n      toast.success('Post deleted successfully', {\r\n        position: \"top-center\",\r\n        autoClose: 3000,\r\n        hideProgressBar: false,\r\n        closeOnClick: true,\r\n        pauseOnHover: true,\r\n        draggable: true,\r\n        progress: undefined,\r\n        theme: \"light\",\r\n        });\r\n    } catch(err){\r\n      toast.error(err.message, {\r\n        position: \"top-center\",\r\n        autoClose: 3000,\r\n        hideProgressBar: false,\r\n        closeOnClick: true,\r\n        pauseOnHover: true,\r\n        draggable: true,\r\n        progress: undefined,\r\n        theme: \"light\",\r\n        });\r\n    }\r\n  }\r\n\r\n  const editPost = async (index, title, body) => {\r\n    try{\r\n      let idx = newPosts.findIndex(post=>post.id===index);\r\n      const response = await fetch(\"https://jsonplaceholder.com/posts/\"+index)\r\n    } catch{\r\n\r\n    }\r\n  \r\n\r\n  }\r\n\r\n  return (\r\n    <div>\r\n      <PostList posts={posts} deletePost={deletePost}/>\r\n      <PostForm addPost={addPost}/>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default Posts;\r\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}